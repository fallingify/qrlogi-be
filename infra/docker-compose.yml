services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: qr-zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    container_name: qr-kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 5


  redis: #Redis  container
    image: redis:7.2
    container_name: qr-redis
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  qr-db-master: #DB-MASTER
    image: bitnami/mysql:8.0
    container_name: qr-db-master
    ports:
      - "3307:3306"
    environment:
      - MYSQL_REPLICATION_MODE=master
      - MYSQL_REPLICATION_USER=repl
      - MYSQL_REPLICATION_PASSWORD=replpass
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=qrlogidb
    volumes:
      - mysql_master_data:/bitnami/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpass" ]
      interval: 10s
      timeout: 5s
      retries: 5

  qr-db-slave: #DB-SLAVE
    image: bitnami/mysql:8.0
    container_name: qr-db-slave
    ports:
      - "3308:3306"
    depends_on:
      - qr-db-master
    environment:
      - MYSQL_REPLICATION_MODE=slave
      - MYSQL_REPLICATION_USER=repl
      - MYSQL_REPLICATION_PASSWORD=replpass
      - MYSQL_MASTER_HOST=qr-db-master
      - MYSQL_MASTER_ROOT_PASSWORD=rootpass
    volumes:
      - mysql_slave_data:/bitnami/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpass" ]
      interval: 10s
      timeout: 5s
      retries: 5

  qr-api: #SpringApplication
    build:
      context:  ../
      dockerfile: Dockerfile
    container_name: qr-spring-app
    depends_on: # Dependencies of SpringApplication Container
      redis:
        condition: service_healthy
      qr-db-master:
        condition: service_healthy
      qr-db-slave:
        condition: service_healthy
      kafka:
        condition : service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: qr-kafka:9092

volumes:
  mysql_master_data: {}
  mysql_slave_data: {}
  kafka_data: {}
